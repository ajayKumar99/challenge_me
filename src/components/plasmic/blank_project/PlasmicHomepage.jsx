// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bRACnz2Zo4tvbao2fEYcsc
// Component: 1yrMhfG7Pe_o
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: bRACnz2Zo4tvbao2fEYcsc/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: 1yrMhfG7Pe_o/css
import LogoIcon from "./icons/PlasmicIcon__Logo"; // plasmic-import: 2iwHfBMOF/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"homepage"}
          data-plasmic-override={overrides.homepage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.homepage
          )}
        >
          <div className={classNames(defaultcss.all, sty.box__c47XS)}>
            <div className={classNames(defaultcss.all, sty.box__uIbul)}>
              <LogoIcon
                data-plasmic-name={"svg"}
                data-plasmic-override={overrides.svg}
                className={classNames(defaultcss.all, sty.svg)}
                role={"img"}
              />

              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  defaultcss.h1,
                  defaultcss.__wab_text,
                  sty.h1
                )}
              >
                {"Challenge.ME"}
              </h1>
            </div>

            <div
              data-plasmic-name={"navLinks4"}
              data-plasmic-override={overrides.navLinks4}
              className={classNames(defaultcss.all, sty.navLinks4)}
            >
              <div
                data-plasmic-name={"navLinks"}
                data-plasmic-override={overrides.navLinks}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.navLinks,
                  "nav-links"
                )}
              >
                {"Home"}
              </div>

              <div
                data-plasmic-name={"navLinks2"}
                data-plasmic-override={overrides.navLinks2}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.navLinks2,
                  "nav-links"
                )}
              >
                {"About"}
              </div>

              <div
                data-plasmic-name={"navLinks3"}
                data-plasmic-override={overrides.navLinks3}
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.navLinks3,
                  "nav-links"
                )}
              >
                {"Sign Up"}
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  homepage: [
    "homepage",
    "svg",
    "h1",
    "navLinks4",
    "navLinks",
    "navLinks2",
    "navLinks3"
  ],

  svg: ["svg"],
  h1: ["h1"],
  navLinks4: ["navLinks4", "navLinks", "navLinks2", "navLinks3"],
  navLinks: ["navLinks"],
  navLinks2: ["navLinks2"],
  navLinks3: ["navLinks3"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "homepage") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("homepage"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    h1: makeNodeComponent("h1"),
    navLinks4: makeNodeComponent("navLinks4"),
    navLinks: makeNodeComponent("navLinks"),
    navLinks2: makeNodeComponent("navLinks2"),
    navLinks3: makeNodeComponent("navLinks3"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
